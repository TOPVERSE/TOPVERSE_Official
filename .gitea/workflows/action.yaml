name: Gitea Actions Demo
run-name: ${{ gitea.actor }} is testing out Gitea Actions ðŸš€
on: [push]

jobs:
  Explore-Gitea-Actions:
    runs-on: server
    container: node:21
    # container:
    #   image: ghcr.nju.edu.cn/catthehacker/ubuntu:act-latest
      # volumes:
      #   - /run/docker.sock:/run/docker.sock
    # env:
    #   DOCKER_ORG: gitea
    #   DOCKER_LATEST: latest
    steps:
      # - run: echo "testseetsetsetstse"
      # - name: To Main
      #   run: cd /opt/workspace/TOPVERSE_Official
      - name: Git
        run: git clone http://www.topverse.world:3000/huxin/TOPVERSE_Official /opt/workspace/website
      - name: Install & Build
        run: |
          cd /opt/workspace/website
          pnpm i 
          pnpm generate
      # - name: Build
      #   run: 
      
      # - name: Deploy
      #   run: |

      # - name: Checkout
      #   uses: actions/checkout@v4
      #   with:
      #     fetch-depth: 0 # all history for all branches and tags

      # - name: Set up QEMU
      #   uses: docker/setup-qemu-action@v3

      # - name: Set up Docker BuildX
      #   uses: docker/setup-buildx-action@v3

      # - name: Login to DockerHub
      #   uses: docker/login-action@v3
      #   with:
      #     username: ${{ secrets.DOCKER_USERNAME }}
      #     password: ${{ secrets.DOCKER_PASSWORD }}

      # - name: Get Meta
      #   id: meta
      #   run: |
      #     echo REPO_NAME=$(echo ${GITHUB_REPOSITORY} | awk -F"/" '{print $2}') >> $GITHUB_OUTPUT
      #     echo REPO_VERSION=$(git describe --tags --always | sed 's/^v//') >> $GITHUB_OUTPUT          

      # - name: Build and push
      #   uses: docker/build-push-action@v5
      #   with:
      #     context: .
      #     file: ./Dockerfile
      #     platforms: |
      #       linux/amd64
      #       linux/arm64            
      #     push: true
      #     tags: |
      #       ${{ env.DOCKER_ORG }}/${{ steps.meta.outputs.REPO_NAME }}:${{ env.DOCKER_LATEST }}      

      # - run: docker build -t website-v1:latest "."
      # - run: docker rm -f website-v1 || true
      # - run: docker run -d -p 19555:80 --restart=unless-stopped --name website-v1 website-v1
      # - run: docker rmi $(docker images -f "dangling=true" -q) || true
      # - run: docker ps
